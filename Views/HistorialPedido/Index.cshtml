@model PagedList.IPagedList<TechSolutions.Models.HistorialPedido>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Historial de Pedidos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #93C47D;
    }

    .btn-action {
        margin: 2px 5px;
    }

    .action-column {
        width: 180px;
    }

    .btn-custom {
        background-color: #28a745; /* Color personalizado */
        color: white;
    }

        .btn-custom:hover {
            background-color: #218838; /* Color al pasar el ratón */
            color: white;
        }
</style>

<div class="container">
    <br>
    <h2>Historial de Pedidos</h2>
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="errorMessage" class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }

    <!-- Campo de búsqueda -->
    <div class="row mb-3">
        <div class="col-12">
            <input type="text" id="search" class="form-control" placeholder="Buscar historial de pedidos...">
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table id="historialTable" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>Id Log</th>
                            <th>Número Pedido</th>
                            <th>Estado</th>
                            <th>Monto Total Pedido</th>
                            <th>Fecha de Operación</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Id)</td>
                                <td>@Html.DisplayFor(modelItem => item.Pedido.Numero)</td>
                                <td>@Html.DisplayFor(modelItem => item.EstadoPedido)</td>
                                <td>$ @Html.DisplayFor(modelItem => item.Pedido.MontoTotal)</td>
                                <td>@Html.DisplayFor(modelItem => item.FechaOperacion)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-end">
            <a href="javascript:void(0);" class="btn btn-success" id="exportToExcel">
                <i class="fas fa-file-excel"></i> Descargar a Excel
            </a>
        </div>
    </div>
    <br />
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>
<script>
    $(document).ready(function () {
        var $successMessage = $('#successMessage');

        if ($successMessage.length) {
            setTimeout(function () {
                $successMessage.fadeOut(500);
            }, 3000);
        }

        var $errorMessage = $('#errorMessage');

        if ($errorMessage.length) {
            setTimeout(function () {
                $errorMessage.fadeOut(500);
            }, 3000);
        }

        // Buscador en vivo
        $('#search').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#historialTable tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        // Exportar a Excel
        $('#exportToExcel').click(function () {
            const tableData = [];
            const headers = ["Id Log", "Número Pedido", "Estado", "Monto Total Pedido", "Fecha de Operación"];

            // Agregar encabezados
            tableData.push(headers);

            // Agregar filas visibles
            $('#historialTable tbody tr:visible').each(function () {
                const rowData = [];
                $(this).find('td').each(function () {
                    rowData.push($(this).text());
                });
                tableData.push(rowData);
            });

            // Crear un libro de trabajo y una hoja
            const worksheet = XLSX.utils.aoa_to_sheet(tableData);
            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, 'HistorialPedidos');

            // Generar el archivo y descargarlo
            XLSX.writeFile(workbook, 'HistorialPedidos.xlsx');
        });
    });
</script>
