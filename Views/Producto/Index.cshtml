@model PagedList.IPagedList<TechSolutions.Models.Producto>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Listado de Productos";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-color: #93C47D;
    }

    .action-column {
        width: 200px; /* Ajusta este valor según sea necesario */
        white-space: nowrap; /* Evita que los botones se dividan en varias líneas */
    }
</style>

<div class="container">
    <br>
    <h2>Listado de Productos</h2>
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div id="errorMessage" class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
    <div class="row">
        <div class="col-12">
            <input type="text" id="search" class="form-control" placeholder="Buscar productos...">
        </div>
    </div>
    <br>
    <div class="row">
        <div class="col-12">
            <div class="table-responsive">
                <table id="productTable" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th>@Html.DisplayNameFor(model => model.First().Nombre)</th>
                            <th>Categoría</th>
                            <th>@Html.DisplayNameFor(model => model.First().Descripcion)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Precio)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Stock)</th>
                            <th>@Html.DisplayNameFor(model => model.First().Foto)</th>
                            <th class="action-column">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                                <td>@Html.DisplayFor(modelItem => item.CategoriaProducto.Nombre)</td>
                                <td>@Html.DisplayFor(modelItem => item.Descripcion)</td>
                                <td>$@Html.DisplayFor(modelItem => item.Precio)</td>
                                <td>@Html.DisplayFor(modelItem => item.Stock)</td>
                                <td>
                                    <button type="button" class="btn btn-dark btn-sm" onclick="showImage('@Url.Content("~/Uploads/" + item.Foto)')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </td>
                                <td class="action-column">
                                    <a href="@Url.Action("Edit", new { id = item.Id })" class="btn btn-secondary btn-sm btn-action">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("Details", new { id = item.Id })" class="btn btn-primary btn-sm btn-action">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a href="@Url.Action("Descontar", new { id = item.Id })" class="btn btn-danger btn-sm btn-action">
                                        <i class="fas fa-minus"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", new { id = item.Id })" class="btn btn-danger btn-sm btn-action">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-center">
            <nav aria-label="Page navigation">
                <ul class="pagination">
                    @if (Model.HasPreviousPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                                <span aria-hidden="true">&laquo;</span>
                            </a>
                        </li>
                    }
                    @for (int i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                        </li>
                    }
                    @if (Model.HasNextPage)
                    {
                        <li class="page-item">
                            <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" aria-label="Next">
                                <span aria-hidden="true">&raquo;</span>
                            </a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
    </div>

    <div class="row">
        <div class="col-12 text-end">
            <a href="@Url.Action("Create", "Producto")" class="btn btn-primary">
                <i class="fas fa-plus"></i> Nuevo Producto
            </a>
            <a href="javascript:void(0);" class="btn btn-success" id="exportToExcel" style="margin-left: 10px;">
                <i class="fas fa-file-excel"></i> Descargar a Excel
            </a>
        </div>
    </div>
    <br />
</div>

<!-- Modal para visualizar imágenes -->
<div class="modal fade" id="imageModal" tabindex="-1" role="dialog" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="imageModalLabel">Vista Previa de la Imagen</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="imagePreview" src="" alt="Imagen" class="img-fluid" />
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>
<script>
    $(document).ready(function () {
        var $successMessage = $('#successMessage');
        var $errorMessage = $('#errorMessage');

        if ($successMessage.length) {
            setTimeout(function () {
                $successMessage.fadeOut(500); // Desvanece el mensaje en 500 ms
            }, 3000); // Espera 3000 ms (3 segundos) antes de comenzar a desvanecer
        }

        if ($errorMessage.length) {
            setTimeout(function () {
                $errorMessage.fadeOut(500); // Desvanece el mensaje en 500 ms
            }, 3000); // Espera 3000 ms (3 segundos) antes de comenzar a desvanecer
        }

        $('#search').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $('#productTable tbody tr').filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });

        $('#exportToExcel').click(function () {
            const tableData = [];
            const headers = ["Nombre", "Categoría", "Descripción", "Precio", "Stock"];

            // Agregar encabezados
            tableData.push(headers);

            // Agregar filas visibles
            $('#productTable tbody tr:visible').each(function () {
                const rowData = [];
                $(this).find('td').each(function (index) {
                    // Excluir las columnas "Foto" y "Acciones"
                    if (index < 5) { // Solo los primeros 5 índices
                        rowData.push($(this).text());
                    }
                });
                tableData.push(rowData);
            });

            // Crear un libro de trabajo y una hoja
            const worksheet = XLSX.utils.aoa_to_sheet(tableData);
            const workbook = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(workbook, worksheet, 'Productos');

            // Generar el archivo y descargarlo
            XLSX.writeFile(workbook, 'ListadoProductos.xlsx');
        });
    });

    function showImage(imageUrl) {
        document.getElementById('imagePreview').src = imageUrl;
        var myModal = new bootstrap.Modal(document.getElementById('imageModal'));
        myModal.show();
    }
</script>
