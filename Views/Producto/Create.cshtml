@model TechSolutions.Models.Producto

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="login-container">
            <h2>Alta Producto</h2>
            <hr class="custom-hr" />
            @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.Nombre, "Nombre (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.Descripcion, "Descripción (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.Precio, "Precio (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", type = "text"} }) 
                            <!--<input id="Precio" name="Precio" type="text" value="@Model.Precio" class="form-control" />   -->
                            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.IdCategoriaProducto, "Categoría (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            @Html.DropDownList("IdCategoriaProducto", ViewBag.IdCategoriaProducto as SelectList, "--Seleccione--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdCategoriaProducto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.Stock,"Stock (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <!--ESTO VALIDAR DEL LADO DEL SERVIDOR-->
                    <div class="form-group row justify-content-center">
                        @Html.LabelFor(model => model.Foto, "Foto (*)", htmlAttributes: new { @class = "control-label col-md-3 text-right" })
                        <div class="col-md-6">
                            <input type="file" id="Foto" name="Foto" class="form-control" />
                            @Html.ValidationMessageFor(model => model.Foto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        <div class="col-md-6">
                            <img id="imagePreview" src="#" alt="Vista previa de la imagen" style="display: none; max-width: 100%; height: auto;" />
                        </div>
                    </div>
                    <br />
                    <div class="form-group row justify-content-center">
                        <div class="col-md-12 text-center">
                            <input type="submit" value="Guardar" class="btn btn-primary btn-block custom-btn" />
                        </div>
                    </div>
                </div>
             }
                </div>
            </div>
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }

        <script type="text/javascript">
            $(document).ready(function () {
                $("#Foto").change(function () {
                    var input = this;
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();

                        reader.onload = function (e) {
                            $('#imagePreview').attr('src', e.target.result).show();
                        };

                        reader.readAsDataURL(input.files[0]);
                    }
                });

                /*$('form').submit(function () {
                    var precio = $('#Precio').val();  // Obtiene el valor del campo Precio
                    console.log("Precio antes de reemplazar: " + precio); // Verifica el valor original
                    if (isNaN(precio) || precio === '') {
                        alert('Por favor, ingresa un precio válido.');
                        return false;  // Previene que el formulario se envíe si el precio no es válido
                    }
                    // Si contiene una coma, la sustituimos por un punto
                    if (precio.indexOf('.') !== -1) {
                        $('#Precio').val(precio.replace('.', ','));
                    }
                    if (isNaN(precio) || precio === '') {
                        alert('Por favor, ingresa un precio válido.');
                        return false;  // Previene que el formulario se envíe si el precio no es válido
                    }
                 
                    console.log("Precio después de reemplazar: " + $('#Precio').val()); // Verifica el valor después de reemplazar
                });*/


            });
        </script>

        <style>
            body {
                background-color: #93C47D;
            }

            .login-container {
                background-color: #f7f7f7;
                padding: 20px;
                border: 1px solid #ddd;
                border-radius: 5px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                text-align: center;
                margin: 0 auto;
            }

            .custom-hr {
                border: none;
                border-top: 3px solid #085394;
                width: 100%;
                margin: 20px 0;
            }

            .form-control,
            .btn-block {
                text-align: center;
            }

            .custom-btn {
                width: 50%;
                font-size: 18px;
            }
        </style>
