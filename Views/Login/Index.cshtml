@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml"; // Asegúrate de que esta ruta coincida con tu layout
}

<div class="row">
    <div class="col-md-6">
        <h2>La tienda donde encontrarás los mejores precios</h2>
        <p>La tienda online donde encontrarás los mejores productos tecnológicos a precios 
        increíbles del mercado. Aquí encontrarás entre desktop, laptos, tablets, discos, teléfonos, 
        distintos dispositivos electrónicos de distinta índole y mucho más...</p>
    </div>
    <div class="col-md-6">
        <div class="login-container">
            <h1>Bienvenido!</h1>
            <hr class="custom-hr" />
            <!-- Mostrar mensaje de éxito si existe -->
            @if (!ViewData.ModelState.IsValid)
            {
                <div id="errorMessage" class="alert alert-danger" role="alert">
                    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                </div>
            }
            @if (ViewBag.SuccessMessage != null)
            {
                <div id="successMessage" class="alert alert-success" role="alert">
                    @ViewBag.SuccessMessage
                </div>
            }
            @if (ViewBag.ErrorMessage != null)
            {
                <div id="errorMessage" class="alert alert-danger" role="alert">
                    @ViewBag.ErrorMessage
                </div>
            }
            <h3>Ingreso</h3>
            <a href="/Recupero/Index" class="btn btn-secondary btn-block custom-btn">
                No recuerda sus datos, ingrese aquí!
            </a>
            <br />
            <p>Ingrese sus datos para continuar</p>
            <br />
            <form method="post" action="/Login/Login">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <label for="Email">Correo electrónico</label>
                    <input type="email" class="form-control" id="Email" name="Email" value="@Request.Form["Email"]" required>
                    @Html.ValidationMessage("Email", "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="Password">Contraseña</label>
                    <input type="password" class="form-control" id="Password" name="Password" value="@Request.Form["Password"]" required>
                    @Html.ValidationMessage("Password", "", new { @class = "text-danger" })
                </div>
                <br />
                <button type="submit" class="btn btn-primary btn-block">Ingresar</button>
            </form>

        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        var successMessage = $('#successMessage');
        if (successMessage.length) {
            setTimeout(function () {
                successMessage.fadeOut('slow');
            }, 5000); // 5000 milisegundos = 5 segundos
        }

        var errorMessage = $('#errorMessage');
        if (errorMessage.length) {
            setTimeout(function () {
                errorMessage.fadeOut('slow');
            }, 5000); // 5000 milisegundos = 5 segundos
        }
        //como el logout redirige al login aca borro el carito
        localStorage.removeItem('carrito');
        console.log('Carrito limpiado en el logout.');
    });
</script>
<style>
    body {
        background-color: #93C47D; /* Fondo verde para todo el cuerpo */
    }

    .login-container {
        background-color: #f7f7f7; /* Fondo blanco para el login */
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: 0 auto; /* Centrar la caja de login */
    }

    .custom-hr {
        border: none;
        border-top: 3px solid #085394; /* Personaliza el color y el grosor */
        width: 80%; /* Ajusta el ancho del hr */
        margin: 20px 0; /* Espacio alrededor del hr */
    }

    .login-form {
        width: 100%;
        max-width: 400px; /* Limitar el ancho máximo del formulario */
    }

        .login-form .form-group {
            width: 100%;
        }

    .form-control,
    .btn-block {
        width: 100%; /* Asegura que los campos y el botón ocupen el 100% del ancho del formulario */
        text-align: center; /* Centrar el texto dentro del input y el botón */
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }

    .custom-btn {
        width: 70%; /* Hacer que el botón ocupe el 100% del ancho */
        margin: 0 auto; /* Centra el botón */
        font-size: 14px;
    }

</style>